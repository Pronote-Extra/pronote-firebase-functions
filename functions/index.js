const functions = require("firebase-functions");
const admin = require('firebase-admin');
const qs = require('qs');
const dotenv = require('dotenv');
const cors = require('cors')({origin: true});
const moment = require('moment-timezone');
const nodemailer = require("nodemailer");
const { localeData } = require("moment-timezone");
const axios = require('axios');

exports.testPronoteAPI = functions.https.onRequest(async (req, res) => {
    let url = process.env.PRONOTE_API_LINK;
    let data = [];
    await axios.post(url, {}, {
        auth: {
            username: process.env.USERNAME,
            password: process.env.PASSWORD
        }
    }).then((res) => {
        data = res.data;
        let transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL, // generated by Mailtrap
                pass: process.env.EMAIL_PASSWORD // generated by Mailtrap
            }
        });

        const mailOptions = {
            from: process.env.EMAIL, //Adding sender's email
            to: "a.dumont22@ejm.org", //Getting recipient's email by query string
            subject: 'Notification - Pronote (Reversed Engineered)', //Email subject
            html: `
            <h2>Notification - Pronote</h2>
            <ul>
                <li><b>User Personal Information: </b>${data[0]}</li>
                <li><b>User Average: </b>${data[1]}</li>
                <li><b>Class Average: </b>${data[2]}</li>
            </ul>
            ` //Email content in HTML
        };

        transporter.sendMail(mailOptions, (err, info) => {
            if(err){
                console.log(err)
            }
            console.log('Email sent successfully');
        });
    });
    res.send(data);
});

exports.pronoteAPI = functions.pubsub.schedule('every 1 minutes').onRun(async(context) => {
    let url = process.env.PRONOTE_API_LINK;
    let data = [];
    await axios.post(url, {}, {
        auth: {
            username: process.env.USERNAME,
            password: process.env.PASSWORD
        }
    }).then((res) => {
        data = res.data;
        let transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL, // generated by Mailtrap
                pass: process.env.EMAIL_PASSWORD // generated by Mailtrap
            }
        });

        const mailOptions = {
            from: process.env.EMAIL, //Adding sender's email
            to: process.env.EMAIL, //Getting recipient's email by query string
            subject: 'Notification - Pronote (Reversed Engineered)', //Email subject
            html: `
            <h2>Notification - Pronote</h2>
            <ul>
                <li><b>User Personal Information: </b>${data[0]}</li>
                <li><b>User Average: </b>${data[1]}</li>
                <li><b>Class Average: </b>${data[2]}</li>
            </ul>
            ` //Email content in HTML
        };

        transporter.sendMail(mailOptions, (err, info) => {
            if(err){
                console.log(err)
            }
            console.log('Email sent successfully');
        });
    });
    res.send(data);
});
